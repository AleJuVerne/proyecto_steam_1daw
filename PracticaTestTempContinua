import unittest
import time
from io import StringIO
from unittest.mock import patch
from your_module import YourClass

class TestMedirTemperaturaContinua(unittest.TestCase):
    def setUp(self):
        self.your_object = YourClass()

    def tearDown(self):
        pass

    @patch('sys.stdout', new_callable=StringIO)
    def test_medir_temperatura_continua(self, mock_stdout):
        expected_output = "Temperatura actual: 25 °C\n"  # Aquí puedes ajustar la temperatura esperada
        with patch('time.sleep', return_value=None) as mock_sleep:
            self.your_object.medir_temperatura_continua(25)  # Aquí puedes ajustar la temperatura de entrada
            mock_sleep.assert_called_once_with(1)  # Verifica que time.sleep se llame con el argumento correcto

        self.assertEqual(mock_stdout.getvalue(), expected_output)

if __name__ == '__main__':
    unittest.main()
